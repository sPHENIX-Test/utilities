pipeline {

    agent none
    environment { 
        JenkinsBase = 'jenkins/test/'
    }
    
        stages { 
            stage('Example') 
            {
        agent any
            
                steps {
                        timestamps {
	                        ansiColor('xterm') {
	                   				 echo 'Example - Entry'
                            sh('pwd')
	                   			 sh ('env');
                            sh('ls -lvhc')
	                   				 echo 'Example - Done'
	                        }
                        }
                }
            }
                   
            stage('SCM Checkout')
            {
        agent any
                steps 
                {
                        timestamps {
                        
	                        ansiColor('xterm') {
                        
                   				 echo 'SCM Checkout - Entry'
                        
                            dir('coresoftware') {
                                git url: 'https://github.com/sPHENIX-Test/coresoftware.git'
                            }
                            dir('macros') {
                                git url: 'https://github.com/sPHENIX-Test/macros.git'
                            }

                            sh('ls -lvhc')
                            sh('pwd')
                            
                            
                   				 echo 'SCM Checkout - Done'
                        }
                        }
                }
             }
             
             
        stage('Build')
        {
            parallel {
            
	            stage('cppcheck')
	            {
	        				agent any
	       
	                steps 
	                {
                        timestamps {
                        
	                        ansiColor('xterm') {
                   				 echo 'cppcheck - Entry'
                   				 
                            dir('cppcheck') {
                            		
                            		sh('ln -svfb ../coresoftware ./');
                            		sh('ln -svfb ${WORKSPACE}/${JenkinsBase}/cppcheck.sh ./');
							
		                            sh('pwd')
                            		sh('ls -lvhc')
									
																sh('/usr/bin/singularity exec -B /gpfs -B /direct -B /afs -B /sphenix /var/lib/jenkins/images/rhic_sl6-1.1.img tcsh -f cppcheck.sh');
                            
                            
                            }

                   				 echo 'cppcheck - Done'
                        	}
                        }
	                }
	                
									

	        		}
	    		}
    		}
             
        }
        
        post{
            
        stage('cppcheck-publish'){
	        				agent any
	        			
	                steps 
	                {	
                        timestamps {
	                        ansiColor('xterm') {
	                   				 echo 'cppcheck-publish - Entry'
                            sh('pwd')
	                   			 sh ('env');
                            sh('ls -lvhc')
                            
														archiveArtifacts artifacts: "${WORKSPACE}/cppcheck/cppcheck.xml", fingerprint: true
                            
		    										build job: 'Pipe-Test-CppCheck-Publisher', parameters: [[$class: 'StringParameterValue', name: 'xmlPath', value: "${WORKSPACE}/cppcheck/cppcheck.xml"]]
                            
                            
	                   				 echo 'cppcheck-publish - Done'
	                        }
                        }
		        			}
        	}

        }

        
        
}
